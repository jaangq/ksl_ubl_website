$base_img: 'http://127.0.0.1:8000/storage/images/';
$blue_link: rgb(123, 186, 231);
@font-face {
    font-family: 'ConcertOne';
    src: url('ConcertOne-Regular.ttf') format('truetype');
 }

// helper
// blockquote
blockquote {
   // color: rgba(250, 200, 130, 0.6);
   color: rgba(255, 255, 255, 0.9);
   font-family: Tahoma, sans-serif;
   font-size: 40px;
   width: 60%;
   margin: 0 auto;
   cursor: pointer;
   // transition-duration: 1s;
}
blockquote:hover {
  color: $blue_link;
}
blockquote h1 {
   font-size: 4rem;
}
blockquote p {
   font-style: italic;
   margin-bottom: 0;
}

blockquote p::before,
blockquote p::after {
   content: "“";
   font-family: Georgia;
   font-size: 8rem;
   margin: -2rem 0 0 -4rem;
   position: absolute;
   opacity: 0.5;
}

blockquote p::after {
   content: "”";
   margin: -1rem -4rem 0 0;
}

blockquote cite {
   font-size: 1.5rem;
}

// diagonal line
.crossed {
    height: 100vh;
    width: 100vw;
    background:
       linear-gradient(to top left,
           rgba(0,0,0,0) 0%,
           rgba(0,0,0,0) calc(50% - 0.8px),
           rgba(0,0,0,1) 50%,
           rgba(0,0,0,0) calc(50% + 0.8px),
           rgba(0,0,0,0) 100%),
       linear-gradient(to top right,
           rgba(0,0,0,0) 0%,
           rgba(0,0,0,0) calc(50% - 0.8px),
           rgba(0,0,0,1) 50%,
           rgba(0,0,0,0) calc(50% + 0.8px),
           rgba(0,0,0,0) 100%);
}
.half-crossed {
    height: 100vh;
    width: 100vw;
    background:
       linear-gradient(to top left,
           rgba(0,0,0,0) 0%,
           rgba(0,0,0,0) calc(50% - 0.8px),
           rgba(0,0,0,1) 50%,
           rgba(0,0,0,0) calc(50% + 0.8px),
           rgba(0,0,0,0) 100%);
}
// triangle bottom-left & top-right
.triangle-bottomleft { width: 0; height: 0; border-bottom: 75vh solid white; border-right: 98.5vw solid transparent; }
.triangle-topright { width: 0; height: 0; border-top: 75vh solid black; border-left: 98.5vw solid transparent; }
.cursor-pointer { cursor: pointer; }
.a-link-anim-draw {
  //
  // Using inset box-shadow instead of border for sizing simplicity
  // box-shadow: inset 0 0 0 2px red;
  color: #000;
  font-size: inherit;
  font-weight: 700;

  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }
  transition: color 0.25s;

    &::before,
    &::after {
      // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
      border: 2px solid transparent;
      width: 0;
      height: 0;
    }

    // This covers the top & right borders (expands right, then down)
    &::before {
      top: 0;
      left: 0;
    }

    // And this the bottom & left borders (expands left, then up)
    &::after {
      bottom: 0;
      right: 0;
    }

    &:hover {
      // color: $blue_link;
    }

    // Hover styles
    &:hover::before,
    &:hover::after {
      width: 100%;
      height: 100%;
    }
    $border-draw: #ddd;
    &:hover::before {
      border-top-color: $border-draw; // Make borders visible
      border-right-color: $border-draw;
      transition:
      width 0.25s ease-out, // Width expands first
      height 0.25s ease-out 0.25s; // And then height
    }

    &:hover::after {
      border-bottom-color: $border-draw; // Make borders visible
      border-left-color: $border-draw;
      transition:
        border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
        width 0.25s ease-out 0.5s, // And then exanding width
        height 0.25s ease-out 0.75s; // And finally height
    }

  //
}
.a-link {
  color: rgba(0, 0, 0, 0.9);
  cursor: pointer;
}
.a-link-white {
  color: #fff;
  cursor: pointer;
}
.a-link:hover, .a-link-white:hover {
  color: $blue_link;
}
.a-link-anim-bottom-border {
  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;
  transition: color 0.25s;
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
    // And this the bottom & left borders (expands left, then up)
    bottom: 0;
    left: 0;
  }

  &:hover {
    color: $blue_link;
  }

  &:hover::after {
    // Hover styles
    width: 100%;
    height: 100%;
    border-bottom-color: $blue_link; // Make borders visible
    transition:
    border-color 0s ease-out, // Wait for ::before to finish before showing border
    width 0.25s ease-out, // And then exanding width
    height 0.25s ease-out; // And finally height
  }
}
.top-to-bottom{
  width: 0;
  word-wrap: break-word;
}
// end helper
body {
  font-family: 'ConcertOne';
  font-size: 1.15em;
  nav.navbar.nav-scrolled {
    background-color: #000 !important;
  }
  nav.navbar {
    position: fixed !important;
    top: 0;
    left: 0;
    width: 100%;
    background-color: transparent !important;
    z-index: 1;
    height: 75px;
    transition-duration: 1s;
    a:not(.nav-title) {
      @extend .a-link-anim-bottom-border;
    }
    a {
      color: #fff !important;
      font-weight: 800;
    }
    a:hover {
      color: $blue_link !important;
    }
    .fa-bars {
      color: #fff;
    }
  }
  .ksl-logo {
    $wh: 3.5em;
    height: $wh;
    width: $wh;
  }
  #navbarSupportedContent {
    position: relative;
    background: #000;
    bottom: 6px;
    z-index: 1;
    padding: 15px;
    ul {
      position: absolute;
      right: 0;
      li {
        a {
          color: #fff;
        }
      }
    }
  }
  footer {
    color: #fff;
  }
}

@media only screen and (max-width: 992px) {
  body {
    #navbarSupportedContent {
      ul {
        position: static;
        right: unset;
        text-align: center;
      }
    }
  }
}
